SET vector.enable_vectorization = on;
SET


-- *** hash agg ***
SET optimizer = off;
SET
SET enable_groupagg = off;
SET

-- normal argument
EXPLAIN (costs off) SELECT count(cint4), sum(cint4), avg(cint4), min(cint4), max(cint4), count(cint8), sum(cint8), avg(cint8), min(cint8), max(cint8), count(cint2), sum(cint2), avg(cint2), min(cint2), max(cint2), count(cdate), min(cdate), max(cdate), count(cts)  , min(cts)  , max(cts)  , count(ctext), min(ctext), max(ctext), count(), grpkey FROM tagg GROUP BY grpkey ORDER BY grpkey;
 QUERY PLAN
---------------------------------------------------------------------
 Gather VecMotion 2:1  (slice2; segments: 2)
   Merge Key: tagg.grpkey
   ->  Vec Sort
         Sort Key: tagg.grpkey
         ->  Vec HashAggregate
               Group Key: tagg.grpkey
               ->  Redistribute VecMotion 2:2  (slice1; segments: 2)
                     Hash Key: tagg.grpkey
                     ->  Vec HashAggregate
                           Group Key: tagg.grpkey
                           ->  Vec Seq Scan on tagg
 Optimizer: Postgres query optimizer
(12 rows)

SELECT count(cint4), sum(cint4), avg(cint4), min(cint4), max(cint4), count(cint8), sum(cint8), avg(cint8), min(cint8), max(cint8), count(cint2), sum(cint2), avg(cint2), min(cint2), max(cint2), count(cdate), min(cdate), max(cdate), count(cts)  , min(cts)  , max(cts)  , count(ctext), min(ctext), max(ctext), count(), grpkey FROM tagg GROUP BY grpkey ORDER BY grpkey;
 count | sum | avg                | min | max | count | sum | avg                 | min | max | count | sum | avg                 | min | max | count | min        | max        | count | min                      | max                      | count | min | max | count | grpkey
-------+-----+--------------------+-----+-----+-------+-----+---------------------+-----+-----+-------+-----+---------------------+-----+-----+-------+------------+------------+-------+--------------------------+--------------------------+-------+-----+-----+-------+--------
 4     | 6   | 1.5000000000000000 | 1   | 2   | 4     | 46  | 11.5000000000000000 | 11  | 12  | 4     | 86  | 21.5000000000000000 | 21  | 22  | 4     | 04-01-2015 | 03-01-2016 | 4     | Sun Feb 01 02:22:35 2015 | Fri Jan 01 01:12:31 2016 | 4     | abc | def | 6     | 1
 4     | 14  | 3.5000000000000000 | 3   | 4   | 4     | 54  | 13.5000000000000000 | 13  | 14  | 4     | 94  | 23.5000000000000000 | 23  | 24  | 4     | 06-01-2013 | 05-01-2014 | 4     | Mon Apr 01 04:21:32 2013 | Sat Mar 01 03:13:39 2014 | 4     | ghi | jkl | 6     | 2
 4     | 22  | 5.5000000000000000 | 5   | 6   | 4     | 62  | 15.5000000000000000 | 15  | 16  | 4     | 102 | 25.5000000000000000 | 25  | 26  | 4     | 08-01-2011 | 07-01-2012 | 4     | Wed Jun 01 06:19:43 2011 | Tue May 01 05:20:53 2012 | 2     | stu | stu | 4     | 3
 2     | 14  | 7.0000000000000000 | 7   | 7   | 2     | 34  | 17.0000000000000000 | 17  | 17  | 2     | 54  | 27.0000000000000000 | 27  | 27  | 2     | 09-01-2010 | 09-01-2010 | 2     | Thu Jul 01 07:16:33 2010 | Thu Jul 01 07:16:33 2010 | 0     |     |     | 2     | 4
 0     |     |                    |     |     | 0     |     |                     |     |     | 0     |     |                     |     |     | 0     |            |            | 0     |                          |                          | 0     |     |     | 2     | 5
 4     | 34  | 8.5000000000000000 | 8   | 9   | 4     | 74  | 18.5000000000000000 | 18  | 19  | 4     | 114 | 28.5000000000000000 | 28  | 29  | 4     | 11-01-2008 | 10-01-2009 | 4     | Mon Sep 01 09:05:13 2008 | Sat Aug 01 08:08:23 2009 | 4     | mno | pqr | 6     |
(6 rows)

-- distinct argument
EXPLAIN (costs off) SELECT count(DISTINCT cint4), sum(DISTINCT cint4), avg(DISTINCT cint4), grpkey FROM tagg GROUP BY grpkey ORDER BY grpkey;
 QUERY PLAN
---------------------------------------------------------------------------
 Gather VecMotion 2:1  (slice2; segments: 2)
   Merge Key: tagg.grpkey
   ->  Vec Sort
         Sort Key: tagg.grpkey
         ->  Vec HashAggregate
               Group Key: tagg.grpkey
               ->  Vec HashAggregate
                     Group Key: tagg.grpkey, tagg.cint4
                     ->  Redistribute VecMotion 2:2  (slice1; segments: 2)
                           Hash Key: tagg.grpkey
                           ->  Vec HashAggregate
                                 Group Key: tagg.grpkey, tagg.cint4
                                 ->  Vec Seq Scan on tagg
 Optimizer: Postgres query optimizer
(14 rows)

EXPLAIN (costs off) SELECT count(DISTINCT cint8), sum(DISTINCT cint8), avg(DISTINCT cint8), grpkey FROM tagg GROUP BY grpkey ORDER BY grpkey;
 QUERY PLAN
---------------------------------------------------------------------------
 Gather VecMotion 2:1  (slice2; segments: 2)
   Merge Key: tagg.grpkey
   ->  Vec Sort
         Sort Key: tagg.grpkey
         ->  Vec HashAggregate
               Group Key: tagg.grpkey
               ->  Vec HashAggregate
                     Group Key: tagg.grpkey, tagg.cint8
                     ->  Redistribute VecMotion 2:2  (slice1; segments: 2)
                           Hash Key: tagg.grpkey
                           ->  Vec HashAggregate
                                 Group Key: tagg.grpkey, tagg.cint8
                                 ->  Vec Seq Scan on tagg
 Optimizer: Postgres query optimizer
(14 rows)

EXPLAIN (costs off) SELECT count(DISTINCT ctext), grpkey FROM tagg GROUP BY grpkey ORDER BY grpkey;
 QUERY PLAN
---------------------------------------------------------------------------
 Gather VecMotion 2:1  (slice2; segments: 2)
   Merge Key: tagg.grpkey
   ->  Vec Sort
         Sort Key: tagg.grpkey
         ->  Vec HashAggregate
               Group Key: tagg.grpkey
               ->  Vec HashAggregate
                     Group Key: tagg.grpkey, tagg.ctext
                     ->  Redistribute VecMotion 2:2  (slice1; segments: 2)
                           Hash Key: tagg.grpkey
                           ->  Vec HashAggregate
                                 Group Key: tagg.grpkey, tagg.ctext
                                 ->  Vec Seq Scan on tagg
 Optimizer: Postgres query optimizer
(14 rows)

SELECT count(DISTINCT cint4), sum(DISTINCT cint4), avg(DISTINCT cint4), grpkey FROM tagg GROUP BY grpkey ORDER BY grpkey;
 count | sum | avg                | grpkey
-------+-----+--------------------+--------
 2     | 3   | 1.5000000000000000 | 1
 2     | 7   | 3.5000000000000000 | 2
 2     | 11  | 5.5000000000000000 | 3
 1     | 7   | 7.0000000000000000 | 4
 0     |     |                    | 5
 2     | 17  | 8.5000000000000000 |
(6 rows)
SELECT count(DISTINCT cint8), sum(DISTINCT cint8), avg(DISTINCT cint8), grpkey FROM tagg GROUP BY grpkey ORDER BY grpkey;
 count | sum | avg                 | grpkey
-------+-----+---------------------+--------
 2     | 23  | 11.5000000000000000 | 1
 2     | 27  | 13.5000000000000000 | 2
 2     | 31  | 15.5000000000000000 | 3
 1     | 17  | 17.0000000000000000 | 4
 0     |     |                     | 5
 2     | 37  | 18.5000000000000000 |
(6 rows)
SELECT count(DISTINCT cint2), sum(DISTINCT cint2), avg(DISTINCT cint2), grpkey FROM tagg GROUP BY grpkey ORDER BY grpkey;
 count | sum | avg                 | grpkey
-------+-----+---------------------+--------
 2     | 43  | 21.5000000000000000 | 1
 2     | 47  | 23.5000000000000000 | 2
 2     | 51  | 25.5000000000000000 | 3
 1     | 27  | 27.0000000000000000 | 4
 0     |     |                     | 5
 2     | 57  | 28.5000000000000000 |
(6 rows)
SELECT count(DISTINCT ctext), grpkey FROM tagg GROUP BY grpkey ORDER BY grpkey;
 count | grpkey
-------+--------
 2     | 1
 2     | 2
 1     | 3
 0     | 4
 0     | 5
 2     |
(6 rows)


-- *** plain agg ***

-- single plain agg
SET optimizer = on;
SET

-- normal argument
EXPLAIN (costs off) SELECT count(cint4), sum(cint4), avg(cint4), min(cint4), max(cint4), count(cint8), sum(cint8), avg(cint8), min(cint8), max(cint8), count(cint2), sum(cint2), avg(cint2), min(cint2), max(cint2), count(cdate), min(cdate), max(cdate), count(cts)  , min(cts)  , max(cts)  , count(ctext), min(ctext), max(ctext), count() FROM tagg;
 QUERY PLAN
---------------------------------------------------
 Vec Aggregate
   ->  Gather VecMotion 2:1  (slice1; segments: 2)
         ->  Vec Seq Scan on tagg
 Optimizer: Pivotal Optimizer (GPORCA)
(4 rows)

SELECT count(cint4), sum(cint4), avg(cint4), min(cint4), max(cint4), count(cint8), sum(cint8), avg(cint8), min(cint8), max(cint8), count(cint2), sum(cint2), avg(cint2), min(cint2), max(cint2), count(cdate), min(cdate), max(cdate), count(cts)  , min(cts)  , max(cts)  , count(ctext), min(ctext), max(ctext), count() FROM tagg;
 count | sum | avg                | min | max | count | sum | avg                 | min | max | count | sum | avg                 | min | max | count | min        | max        | count | min                      | max                      | count | min | max | count
-------+-----+--------------------+-----+-----+-------+-----+---------------------+-----+-----+-------+-----+---------------------+-----+-----+-------+------------+------------+-------+--------------------------+--------------------------+-------+-----+-----+-------
 18    | 90  | 5.0000000000000000 | 1   | 9   | 18    | 270 | 15.0000000000000000 | 11  | 19  | 18    | 450 | 25.0000000000000000 | 21  | 29  | 18    | 11-01-2008 | 03-01-2016 | 18    | Mon Sep 01 09:05:13 2008 | Fri Jan 01 01:12:31 2016 | 14    | abc | stu | 26
(1 row)


-- distinct argument
EXPLAIN (costs off) SELECT count(DISTINCT cint4), sum(DISTINCT cint4), avg(DISTINCT cint4) FROM tagg;
 QUERY PLAN
---------------------------------------------------
 Vec Aggregate
   ->  Gather VecMotion 2:1  (slice1; segments: 2)
         ->  Vec Seq Scan on tagg
 Optimizer: Pivotal Optimizer (GPORCA)
(4 rows)

EXPLAIN (costs off) SELECT count(DISTINCT cint8), sum(DISTINCT cint8), avg(DISTINCT cint8) FROM tagg;
 QUERY PLAN
---------------------------------------------------
 Vec Aggregate
   ->  Gather VecMotion 2:1  (slice1; segments: 2)
         ->  Vec Seq Scan on tagg
 Optimizer: Pivotal Optimizer (GPORCA)
(4 rows)

EXPLAIN (costs off) SELECT count(DISTINCT ctext) FROM tagg;
 QUERY PLAN
---------------------------------------------------
 Vec Aggregate
   ->  Gather VecMotion 2:1  (slice1; segments: 2)
         ->  Vec Seq Scan on tagg
 Optimizer: Pivotal Optimizer (GPORCA)
(4 rows)

SELECT count(DISTINCT cint4), sum(DISTINCT cint4), avg(DISTINCT cint4) FROM tagg;
 count | sum | avg
-------+-----+--------------------
 9     | 45  | 5.0000000000000000
(1 row)
SELECT count(DISTINCT cint8), sum(DISTINCT cint8), avg(DISTINCT cint8) FROM tagg;
 count | sum | avg
-------+-----+---------------------
 9     | 135 | 15.0000000000000000
(1 row)
SELECT count(DISTINCT cint2), sum(DISTINCT cint2), avg(DISTINCT cint2) FROM tagg;
 count | sum | avg
-------+-----+---------------------
 9     | 225 | 25.0000000000000000
(1 row)
SELECT count(DISTINCT ctext) FROM tagg;
 count
-------
 7
(1 row)


-- double plain aggs
SET optimizer = off;
SET

-- normal argument
EXPLAIN (costs off) SELECT count(cint4), sum(cint4), avg(cint4), min(cint4), max(cint4), count(cint8), sum(cint8), avg(cint8), min(cint8), max(cint8), count(cint2), sum(cint2), avg(cint2), min(cint2), max(cint2), count(cdate), min(cdate), max(cdate), count(cts)  , min(cts)  , max(cts)  , count(ctext), min(ctext), max(ctext), count() FROM tagg;
 QUERY PLAN
---------------------------------------------------
 Vec Aggregate
   ->  Gather VecMotion 2:1  (slice1; segments: 2)
         ->  Vec Aggregate
               ->  Vec Seq Scan on tagg
 Optimizer: Postgres query optimizer
(5 rows)

SELECT count(cint4), sum(cint4), avg(cint4), min(cint4), max(cint4), count(cint8), sum(cint8), avg(cint8), min(cint8), max(cint8), count(cint2), sum(cint2), avg(cint2), min(cint2), max(cint2), count(cdate), min(cdate), max(cdate), count(cts)  , min(cts)  , max(cts)  , count(ctext), min(ctext), max(ctext), count() FROM tagg;
 count | sum | avg                | min | max | count | sum | avg                 | min | max | count | sum | avg                 | min | max | count | min        | max        | count | min                      | max                      | count | min | max | count
-------+-----+--------------------+-----+-----+-------+-----+---------------------+-----+-----+-------+-----+---------------------+-----+-----+-------+------------+------------+-------+--------------------------+--------------------------+-------+-----+-----+-------
 18    | 90  | 5.0000000000000000 | 1   | 9   | 18    | 270 | 15.0000000000000000 | 11  | 19  | 18    | 450 | 25.0000000000000000 | 21  | 29  | 18    | 11-01-2008 | 03-01-2016 | 18    | Mon Sep 01 09:05:13 2008 | Fri Jan 01 01:12:31 2016 | 14    | abc | stu | 26
(1 row)


-- distinct argument
EXPLAIN (costs off) SELECT count(DISTINCT cint4), sum(DISTINCT cint4), avg(DISTINCT cint4) FROM tagg;
 QUERY PLAN
---------------------------------------------------
 Vec Aggregate
   ->  Gather VecMotion 2:1  (slice1; segments: 2)
         ->  Vec HashAggregate
               Group Key: tagg.cint4
               ->  Vec Seq Scan on tagg
 Optimizer: Postgres query optimizer
(6 rows)

EXPLAIN (costs off) SELECT count(DISTINCT cint8), sum(DISTINCT cint8), avg(DISTINCT cint8) FROM tagg;
 QUERY PLAN
---------------------------------------------------------------------
 Vec Aggregate
   ->  Gather VecMotion 2:1  (slice2; segments: 2)
         ->  Vec HashAggregate
               Group Key: tagg.cint8
               ->  Redistribute VecMotion 2:2  (slice1; segments: 2)
                     Hash Key: tagg.cint8
                     ->  Vec HashAggregate
                           Group Key: tagg.cint8
                           ->  Vec Seq Scan on tagg
 Optimizer: Postgres query optimizer
(10 rows)

EXPLAIN (costs off) SELECT count(DISTINCT ctext) FROM tagg;
 QUERY PLAN
---------------------------------------------------------------------
 Vec Aggregate
   ->  Gather VecMotion 2:1  (slice2; segments: 2)
         ->  Vec HashAggregate
               Group Key: tagg.ctext
               ->  Redistribute VecMotion 2:2  (slice1; segments: 2)
                     Hash Key: tagg.ctext
                     ->  Vec HashAggregate
                           Group Key: tagg.ctext
                           ->  Vec Seq Scan on tagg
 Optimizer: Postgres query optimizer
(10 rows)

SELECT count(DISTINCT cint4), sum(DISTINCT cint4), avg(DISTINCT cint4) FROM tagg;
 count | sum | avg
-------+-----+--------------------
 9     | 45  | 5.0000000000000000
(1 row)
SELECT count(DISTINCT cint8), sum(DISTINCT cint8), avg(DISTINCT cint8) FROM tagg;
 count | sum | avg
-------+-----+---------------------
 9     | 135 | 15.0000000000000000
(1 row)
SELECT count(DISTINCT cint2), sum(DISTINCT cint2), avg(DISTINCT cint2) FROM tagg;
 count | sum | avg
-------+-----+---------------------
 9     | 225 | 25.0000000000000000
(1 row)
SELECT count(DISTINCT ctext) FROM tagg;
 count
-------
 7
(1 row)


-- *** group agg ***
ANALYZE tagg;
ANALYZE

-- normal argument
set optimizer = on;
SET
EXPLAIN (costs off) SELECT avg(cint8), min(cint8), max(cint8), grpkey FROM tagg GROUP BY grpkey ORDER BY grpkey;
 QUERY PLAN
---------------------------------------------------------------------
 Gather VecMotion 2:1  (slice2; segments: 2)
   Merge Key: grpkey
   ->  Vec GroupAggregate
         Group Key: grpkey
         ->  Vec Sort
               Sort Key: grpkey
               ->  Redistribute VecMotion 2:2  (slice1; segments: 2)
                     Hash Key: grpkey
                     ->  Vec Result
                           ->  Vec HashAggregate
                                 Group Key: grpkey
                                 ->  Vec Seq Scan on tagg
 Optimizer: Pivotal Optimizer (GPORCA)
(13 rows)

SELECT avg(cint8), min(cint8), max(cint8), grpkey FROM tagg GROUP BY grpkey ORDER BY grpkey;
 avg                 | min | max | grpkey
---------------------+-----+-----+--------
 11.5000000000000000 | 11  | 12  | 1
 13.5000000000000000 | 13  | 14  | 2
 15.5000000000000000 | 15  | 16  | 3
 17.0000000000000000 | 17  | 17  | 4
                     |     |     | 5
 18.5000000000000000 | 18  | 19  |
(6 rows)

set optimizer = off;
SET
set enable_hashagg = off;
SET
EXPLAIN (costs off) SELECT count(cint4), sum(cint4), avg(cint4), min(cint4), max(cint4), count(cint8), sum(cint8), avg(cint8), min(cint8), max(cint8), count(cint2), sum(cint2), avg(cint2), min(cint2), max(cint2), count(cdate), min(cdate), max(cdate), count(cts)  , min(cts)  , max(cts)  , count(ctext), min(ctext), max(ctext), count(), grpkey FROM tagg GROUP BY grpkey ORDER BY grpkey;
 QUERY PLAN
---------------------------------------------------------------------------
 Gather VecMotion 2:1  (slice2; segments: 2)
   Merge Key: tagg.grpkey
   ->  Vec Sort
         Sort Key: tagg.grpkey
         ->  Vec GroupAggregate
               Group Key: tagg.grpkey
               ->  Vec Sort
                     Sort Key: tagg.grpkey
                     ->  Redistribute VecMotion 2:2  (slice1; segments: 2)
                           Hash Key: tagg.grpkey
                           ->  Vec GroupAggregate
                                 Group Key: tagg.grpkey
                                 ->  Vec Sort
                                       Sort Key: tagg.grpkey
                                       ->  Vec Seq Scan on tagg
 Optimizer: Postgres query optimizer
(16 rows)

SELECT count(cint4), sum(cint4), avg(cint4), min(cint4), max(cint4), count(cint8), sum(cint8), avg(cint8), min(cint8), max(cint8), count(cint2), sum(cint2), avg(cint2), min(cint2), max(cint2), count(cdate), min(cdate), max(cdate), count(cts)  , min(cts)  , max(cts)  , count(ctext), min(ctext), max(ctext), count(), grpkey FROM tagg GROUP BY grpkey ORDER BY grpkey;
 count | sum | avg                | min | max | count | sum | avg                 | min | max | count | sum | avg                 | min | max | count | min        | max        | count | min                      | max                      | count | min | max | count | grpkey
-------+-----+--------------------+-----+-----+-------+-----+---------------------+-----+-----+-------+-----+---------------------+-----+-----+-------+------------+------------+-------+--------------------------+--------------------------+-------+-----+-----+-------+--------
 4     | 6   | 1.5000000000000000 | 1   | 2   | 4     | 46  | 11.5000000000000000 | 11  | 12  | 4     | 86  | 21.5000000000000000 | 21  | 22  | 4     | 04-01-2015 | 03-01-2016 | 4     | Sun Feb 01 02:22:35 2015 | Fri Jan 01 01:12:31 2016 | 4     | abc | def | 6     | 1
 4     | 14  | 3.5000000000000000 | 3   | 4   | 4     | 54  | 13.5000000000000000 | 13  | 14  | 4     | 94  | 23.5000000000000000 | 23  | 24  | 4     | 06-01-2013 | 05-01-2014 | 4     | Mon Apr 01 04:21:32 2013 | Sat Mar 01 03:13:39 2014 | 4     | ghi | jkl | 6     | 2
 4     | 22  | 5.5000000000000000 | 5   | 6   | 4     | 62  | 15.5000000000000000 | 15  | 16  | 4     | 102 | 25.5000000000000000 | 25  | 26  | 4     | 08-01-2011 | 07-01-2012 | 4     | Wed Jun 01 06:19:43 2011 | Tue May 01 05:20:53 2012 | 2     | stu | stu | 4     | 3
 2     | 14  | 7.0000000000000000 | 7   | 7   | 2     | 34  | 17.0000000000000000 | 17  | 17  | 2     | 54  | 27.0000000000000000 | 27  | 27  | 2     | 09-01-2010 | 09-01-2010 | 2     | Thu Jul 01 07:16:33 2010 | Thu Jul 01 07:16:33 2010 | 0     |     |     | 2     | 4
 0     |     |                    |     |     | 0     |     |                     |     |     | 0     |     |                     |     |     | 0     |            |            | 0     |                          |                          | 0     |     |     | 2     | 5
 4     | 34  | 8.5000000000000000 | 8   | 9   | 4     | 74  | 18.5000000000000000 | 18  | 19  | 4     | 114 | 28.5000000000000000 | 28  | 29  | 4     | 11-01-2008 | 10-01-2009 | 4     | Mon Sep 01 09:05:13 2008 | Sat Aug 01 08:08:23 2009 | 4     | mno | pqr | 6     |
(6 rows)

-- disinct argument
set optimizer = on;
SET

EXPLAIN (costs off) SELECT count(DISTINCT cint4), sum(DISTINCT cint4), avg(DISTINCT cint4), grpkey FROM tagg GROUP BY grpkey ORDER BY grpkey;
 QUERY PLAN
---------------------------------------------------------------------
 Gather VecMotion 2:1  (slice2; segments: 2)
   Merge Key: grpkey
   ->  Vec GroupAggregate
         Group Key: grpkey
         ->  Vec Sort
               Sort Key: grpkey
               ->  Redistribute VecMotion 2:2  (slice1; segments: 2)
                     Hash Key: grpkey
                     ->  Vec Seq Scan on tagg
 Optimizer: Pivotal Optimizer (GPORCA)
(10 rows)

EXPLAIN (costs off) SELECT count(DISTINCT cint8), sum(DISTINCT cint8), avg(DISTINCT cint8), grpkey FROM tagg GROUP BY grpkey ORDER BY grpkey;
 QUERY PLAN
---------------------------------------------------------------------
 Gather VecMotion 2:1  (slice2; segments: 2)
   Merge Key: grpkey
   ->  Vec GroupAggregate
         Group Key: grpkey
         ->  Vec Sort
               Sort Key: grpkey
               ->  Redistribute VecMotion 2:2  (slice1; segments: 2)
                     Hash Key: grpkey
                     ->  Vec Seq Scan on tagg
 Optimizer: Pivotal Optimizer (GPORCA)
(10 rows)

EXPLAIN (costs off) SELECT count(DISTINCT ctext), grpkey FROM tagg GROUP BY grpkey ORDER BY grpkey;
 QUERY PLAN
---------------------------------------------------------------------
 Gather VecMotion 2:1  (slice2; segments: 2)
   Merge Key: grpkey
   ->  Vec GroupAggregate
         Group Key: grpkey
         ->  Vec Sort
               Sort Key: grpkey
               ->  Redistribute VecMotion 2:2  (slice1; segments: 2)
                     Hash Key: grpkey
                     ->  Vec Seq Scan on tagg
 Optimizer: Pivotal Optimizer (GPORCA)
(10 rows)

SELECT count(DISTINCT cint4), sum(DISTINCT cint4), avg(DISTINCT cint4), grpkey FROM tagg GROUP BY grpkey ORDER BY grpkey;
 count | sum | avg                | grpkey
-------+-----+--------------------+--------
 2     | 3   | 1.5000000000000000 | 1
 2     | 7   | 3.5000000000000000 | 2
 2     | 11  | 5.5000000000000000 | 3
 1     | 7   | 7.0000000000000000 | 4
 0     |     |                    | 5
 2     | 17  | 8.5000000000000000 |
(6 rows)
SELECT count(DISTINCT cint8), sum(DISTINCT cint8), avg(DISTINCT cint8), grpkey FROM tagg GROUP BY grpkey ORDER BY grpkey;
 count | sum | avg                 | grpkey
-------+-----+---------------------+--------
 2     | 23  | 11.5000000000000000 | 1
 2     | 27  | 13.5000000000000000 | 2
 2     | 31  | 15.5000000000000000 | 3
 1     | 17  | 17.0000000000000000 | 4
 0     |     |                     | 5
 2     | 37  | 18.5000000000000000 |
(6 rows)
SELECT count(DISTINCT cint2), sum(DISTINCT cint2), avg(DISTINCT cint2), grpkey FROM tagg GROUP BY grpkey ORDER BY grpkey;
 count | sum | avg                 | grpkey
-------+-----+---------------------+--------
 2     | 43  | 21.5000000000000000 | 1
 2     | 47  | 23.5000000000000000 | 2
 2     | 51  | 25.5000000000000000 | 3
 1     | 27  | 27.0000000000000000 | 4
 0     |     |                     | 5
 2     | 57  | 28.5000000000000000 |
(6 rows)
SELECT count(DISTINCT ctext), grpkey FROM tagg GROUP BY grpkey ORDER BY grpkey;
 count | grpkey
-------+--------
 2     | 1
 2     | 2
 1     | 3
 0     | 4
 0     | 5
 2     |
(6 rows)
